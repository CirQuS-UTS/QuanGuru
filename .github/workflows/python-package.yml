# This workflow will install Python dependencies, lint, run mypy and tests

name: QuanGuru-main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linter:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Analysing the code with pylint
        run: |
          python3 -m pylint --rcfile=.pylintrc src/quanguru
  
  type_hints:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Type-hints with mypy
        run: |
          python3 -m mypy

  QuantumToolbox_core:
    needs: 
      - type_hints
      - linter
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: core tests
        run: |
          python3 -m pytest -k 'Core'

  all_other_unit_tests:
    needs: QuantumToolbox_core
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: rest
        run: |
          python3 -m pytest --ignore=tests/QuantumToolboxCore -k 'not Core and not Integration'

  Integration_tests:
    needs: all_other_unit_tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: integration tests
        run: |
          python3 -m pytest --ignore=tests/QuantumToolboxCore -k 'QuantumToolboxIntegration or Integration'
